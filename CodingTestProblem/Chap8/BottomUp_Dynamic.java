/*메모이제이션(Memoization)기법을 사용한 다이나믹 프로그래밍 
메모이제이션은 다이나믹 프로그래밍을 구현하는 방법 중 한 종류로,
한 번 구한 결과를 메모리 공간에 메모해 두고 같은 식을 다시 호출하면 메모한 결과를 그대로 가져오는 기법을 의미한다.
피보나치 함수를 반복적으로 구현(바텀업 다이나믹 프로그래밍)
반복문을 이용하여 소스코드를 작성하는 경우 작은 문제부터 차근차근 답을 도출한다고 하여 바텀업 방식이라 한다.
재귀함수를 사용하면 컴퓨터 시스템에서는 함수를 다시 호출했을 때 
메모리 상에 적재되는 일련의 과정을 따라야 하므로 오버헤드가 발생할 수 있다. 
따라서 재귀함수 대신 반복문을 사용하여 오버헤드를 줄일 수 있다. 
*/

public class BottomUp_Dynamic {
	public static long[] d = new long[100];
	
	public static void main(String[] args) {
		d[1] = 1;
		d[2] = 1;
		int n = 50;
		
		for(int i = 3; i<=n; i++) {
			d[i] = d[i-1] + d[i-2];
		}
		System.out.println(d[n]);
	}

}
